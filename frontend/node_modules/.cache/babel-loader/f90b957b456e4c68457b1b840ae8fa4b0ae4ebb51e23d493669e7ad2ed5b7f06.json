{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this.addNewCard = data => {\n      return fetch(`${this._baseUrl}/cards`, {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.place,\n          link: data.link\n        })\n      }).then(this._checkResponse);\n    };\n    this._baseUrl = baseUrl;\n    // this._headers = headers;\n    // this._authorization = headers.authorization;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getCard() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: {\n        // authorization: this._authorization,\n        \"Authorization\": \"Bearer &{jwt}\"\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCardItem(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getAppInfo() {\n    return Promise.all([this.getCard(), this.getUserInfo()]);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(id, isLiked) {\n    if (!isLiked) {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this._authorization\n        }\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this._authorization\n        }\n      }).then(this._checkResponse);\n    }\n  }\n}\nconst api = new Api({\n  // baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  baseUrl: \"http://localhost:3000\"\n  // headers: {\n  //   authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGRjOWNhOTI5MTVjN2Y0OTQ4NTE0MzYiLCJpYXQiOjE2OTMwNDA4NzAsImV4cCI6MTY5MzY0NTY3MH0.-t683ZxNK-cMUA1FHuRjlgYf0Fyym9kf4lLq-dmVuTg\",\n  //   \"Content-Type\": \"application/json\",\n  // },\n});\n\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","addNewCard","data","fetch","_baseUrl","method","_headers","body","JSON","stringify","name","place","link","then","_checkResponse","res","ok","json","Promise","reject","status","getCard","deleteCardItem","id","authorization","_authorization","getUserInfo","getAppInfo","all","setUserInfo","about","setUserAvatar","avatar","changeLikeCardStatus","isLiked","api"],"sources":["C:/Users/Дарья/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    // this._headers = headers;\r\n    // this._authorization = headers.authorization;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getCard() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        // authorization: this._authorization,\r\n        \"Authorization\": \"Bearer &{jwt}\"\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  addNewCard = (data) => {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.place,\r\n        link: data.link,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  };\r\n\r\n  deleteCardItem(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getAppInfo() {\r\n    return Promise.all([this.getCard(), this.getUserInfo()]);\r\n  }\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n    if (!isLiked) {\r\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          authorization: this._authorization,\r\n        },\r\n      }).then(this._checkResponse);\r\n    } else {\r\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          authorization: this._authorization,\r\n        },\r\n      }).then(this._checkResponse);\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  // baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\r\n  baseUrl: \"http://localhost:3000\",\r\n  // headers: {\r\n  //   authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGRjOWNhOTI5MTVjN2Y0OTQ4NTE0MzYiLCJpYXQiOjE2OTMwNDA4NzAsImV4cCI6MTY5MzY0NTY3MH0.-t683ZxNK-cMUA1FHuRjlgYf0Fyym9kf4lLq-dmVuTg\",\r\n  //   \"Content-Type\": \"application/json\",\r\n  // },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}