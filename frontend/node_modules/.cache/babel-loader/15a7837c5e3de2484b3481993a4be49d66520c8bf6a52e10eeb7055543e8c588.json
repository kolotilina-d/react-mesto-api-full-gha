{"ast":null,"code":"const baseUrl = \"https://auth.nomoreparties.co\";\nfunction checkResponse(res) {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n}\nexport function autentification(email, pass) {\n  return fetch(`${baseUrl}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": pass,\n      \"email\": email\n    })\n  }).then(res => console.log(res)).then(checkResponse);\n}\nexport function autorisation(email, pass) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": pass,\n      \"email\": email\n    })\n  }).then(res => console.log(res)).then(checkResponse);\n}\nexport function checkUser(jwt) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    },\n    body: JSON.stringify({\n      \"password\": pass,\n      \"email\": email\n    })\n  }).then(res => console.log(res)).then(checkResponse);\n}","map":{"version":3,"names":["baseUrl","checkResponse","res","ok","json","Promise","reject","status","autentification","email","pass","fetch","method","headers","body","JSON","stringify","then","console","log","autorisation","checkUser","jwt"],"sources":["C:/Users/Дарья/dev/react-mesto-auth/src/utils/login.js"],"sourcesContent":["const baseUrl = \"https://auth.nomoreparties.co\";\r\nfunction checkResponse(res) {\r\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport function autentification(email, pass) {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      \"password\": pass,\r\n      \"email\": email}),\r\n  })\r\n  .then(res => console.log(res))\r\n  .then(checkResponse)\r\n}\r\n\r\nexport function autorisation(email, pass) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      \"password\": pass,\r\n      \"email\": email}),\r\n  })\r\n  .then(res => console.log(res))\r\n  .then(checkResponse)\r\n}\r\n\r\nexport function checkUser(jwt) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\" : `Bearer ${jwt}`\r\n  },\r\n    body: JSON.stringify({\r\n      \"password\": pass,\r\n      \"email\": email}),\r\n  })\r\n  .then(res => console.log(res))\r\n  .then(checkResponse)\r\n}\r\n\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+BAA+B;AAC/C,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AACtE;AAEA,OAAO,SAASC,eAAeA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC3C,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,UAAU,EAAEN,IAAI;MAChB,OAAO,EAAED;IAAK,CAAC;EACnB,CAAC,CAAC,CACDQ,IAAI,CAACf,GAAG,IAAIgB,OAAO,CAACC,GAAG,CAACjB,GAAG,CAAC,CAAC,CAC7Be,IAAI,CAAChB,aAAa,CAAC;AACtB;AAEA,OAAO,SAASmB,YAAYA,CAACX,KAAK,EAAEC,IAAI,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,UAAU,EAAEN,IAAI;MAChB,OAAO,EAAED;IAAK,CAAC;EACnB,CAAC,CAAC,CACDQ,IAAI,CAACf,GAAG,IAAIgB,OAAO,CAACC,GAAG,CAACjB,GAAG,CAAC,CAAC,CAC7Be,IAAI,CAAChB,aAAa,CAAC;AACtB;AAEA,OAAO,SAASoB,SAASA,CAACC,GAAG,EAAE;EAC7B,OAAOX,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASS,GAAI;IACpC,CAAC;IACCR,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,UAAU,EAAEN,IAAI;MAChB,OAAO,EAAED;IAAK,CAAC;EACnB,CAAC,CAAC,CACDQ,IAAI,CAACf,GAAG,IAAIgB,OAAO,CAACC,GAAG,CAACjB,GAAG,CAAC,CAAC,CAC7Be,IAAI,CAAChB,aAAa,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}